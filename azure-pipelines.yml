name: $(version)

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  major: 8
  minor: 0
  version: $[format('{0}.{1}.{2}', variables['major'], variables['minor'], counter(format('{0}.{1}', variables['major'], variables['minor']), 0))]
  buildConfiguration: 'Release'

steps:

- task: UseDotNet@2
  displayName: 'Use .NET Core sdk 8.0.x'
  inputs:
    packageType: sdk
    version: '8.0.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  inputs:
    command: pack
    packagesToPack: 'SW.CqApi/SW.CqApi.csproj'
    nobuild: true
    versioningScheme: byBuildNumber

- task: NuGetCommand@2
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'swnuget' 

